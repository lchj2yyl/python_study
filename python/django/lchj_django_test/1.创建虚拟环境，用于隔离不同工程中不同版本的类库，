1.创建虚拟环境，用于隔离不同工程中不同版本的类库，
  create：mkvirtualenv $name
  delete：rmvirtualenv $name
  activate: workon
  deactivate: deactivate
  change:workon $name
2.创建一个django工程
  django startproject $name

  ├── manage.py
	└── note_test
    ├── __init__.py
    ├── settings.py project的总配置，配置数据库，app
    ├── urls.py 配置url
    └── wsgi.py

3.创建一个djangoApp
  pyton manage.py startapp note_test_app
	├── manage.py
	├── note_test
	│   ├── __init__.py
	│   ├── __init__.pyc
	│   ├── settings.py
	│   ├── settings.pyc
	│   ├── urls.py
	│   └── wsgi.py
	└── note_test_app
    	├── __init__.py
    	├── admin.py
    	├── migrations
    	│   └── __init__.py
    	├── models.py 
    	├── tests.py
    	└── views.py
  创建完应用需要在project的setting中注册
4.创建Module，
  class AuthorInfo(models.Model):
    name = models.CharField(max_length=100)
    age = models.IntegerField()
    sex = models.IntegerField(default=0)
  继承models.Model 可以生成数据CRUD等操作

  创建完module需要执行migrate操作进行迁移
  python manage.py makemigrations 生成迁移
  python manager.py migrate 执行迁移

5.视图
  视图有一个方法表示，方法的参数为request，是http请求的封装
  视图的注册: url(r'^show/book/(\d+)$', views.show)
  def show(request,id):
    author = AuthorInfo.objects.get(pk = id)
    book_list = author.bookinfo_set.all()
    context = {'list': book_list}
    return render(request, 'booktest/show.html', context)
  接受一个request，返回一个render
6.模版
  视图中返回的html，称之为模版
  模版需要注册在project中的setting中
  TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

一个简单的模版
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
<ul>
<h1>This is a show page</h1>
{% for book in list %}
    <li>{{book.title}} {{ book.pub_date }} {{ book.author.name }}</li>
{% endfor %}
</ul>
</body>
</html>



